package com.luoling.handlers;

public final class Looper {
	
	private static ThreadLocal<Looper> sThreadLocal = new ThreadLocal<Looper>();
	
	MessageQueue mQueue;
	
	private Looper(){
		mQueue = new MessageQueue();
	}
	
	public static void prepare(){
		if(sThreadLocal.get()!=null){
			throw new RuntimeException("Only one Looper mey be create per Thread");
		}
		sThreadLocal.set(new Looper());
		
	}
	
	public static Looper myLooper(){
		return sThreadLocal.get();
	}
	
	public static void looper(){
		Looper me = myLooper();
		if(me == null){
			throw new RuntimeException("No Looper; Looper.prepare() wasn't called on this Thread.");
		}
		MessageQueue queue = me.mQueue;
		while(true){
			Message msg = queue.next();
			if(msg == null){
				continue;
			}
			msg.taget.dispatchMessage(msg);
		}
	}
}
